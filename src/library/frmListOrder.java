/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library;

import Function.Display;
import Function.QueryGeneral;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class frmListOrder extends javax.swing.JFrame {

    /**
     * Creates new form frmListOrder
     */
    frmOrderBook objOderBook = new frmOrderBook();
    DefaultTableModel dtm;
    Connection conn;
    QueryGeneral objQG;
    DefaultTableModel dtmSelectBook;
    DefaultTableModel dtmSelectManu;
    String[] bookInfo = new String[4];
    DefaultTableModel dtmBookEdit;
    String OrderEdit;
    String[] manuInfo = new String[6];
    ArrayList<String> listCurrentBook = new ArrayList<>();
    int Total = 0;
    int Number = 0;
    String numtemp;
    String totaltemp;
    String empID;
    boolean bPermission;
    String sOrderDetail;
    DefaultTableModel dtmOrderDetail;
    
    
    public frmListOrder() {
        initComponents();
        dtmSelectBook = (DefaultTableModel) tblBook.getModel();
        try {
            DriverManager.registerDriver(new com.microsoft.sqlserver.jdbc.SQLServerDriver());
            String dbURL = "jdbc:sqlserver://localhost:1433;databaseName=Library";
            this.conn = DriverManager.getConnection(dbURL, "sa", "sa");
            //System.out.println(""+conn);
            
        } catch (SQLException ex) {
            System.out.println(""+ex.toString());
            
        }
        objQG = new QueryGeneral();
        dtm = (DefaultTableModel) tblListOrder.getModel();
            objQG.setConn(conn);
            objQG.setTable("BookOrder");
            ResultSet rsBook;
            String sql = "Select bo.OrderID, ManuName, EmpName, SUM(bod.BookNumber) AS Number, SUM(bod.BookPrice) AS Price \n" +
                        "From BookOrder as bo, Manufactory as Manu, Employee as emp, BookOrderDetail as bod \n" +
                        "Where bo.OrderID = bod.OrderID and bo.ManuID = Manu.ManuID and bo.EmpID = emp.EmpID \n" +
                        "Group By bo.OrderID, ManuName, EmpName";
            rsBook = objQG.selectMultiTable(sql);
            ResultSet rsBookTemp;
            rsBookTemp = objQG.selectMultiTable(sql);
            int countTemp = 0;
            try {
                while(rsBookTemp.next())
                {
                    countTemp++;
                }
            } catch (SQLException ex) {
                Logger.getLogger(frmOrderBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            String[][] sqlData = new String[countTemp][5];
            String[] listCol = new String[]{"OrderID", "ManuName", "EmpName", "Number","Price"};
            String[] listType = new String[]{"String", "String", "String", "int","int"};
            Display objDisplay = new Display(listCol);
            sqlData = objDisplay.getData(rsBook, listType, countTemp, 5);
            for(int i = 0; i<countTemp;i++)
            {
                dtm.addRow(sqlData[i]);
            }
            
           
            
            //event
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fmrEdit = new javax.swing.JFrame();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtAddress = new javax.swing.JTextField();
        txtContact = new javax.swing.JTextField();
        txtPhone = new javax.swing.JTextField();
        txtEmail = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblBookEdit = new javax.swing.JTable();
        jButton4 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        lblBookNum = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lbltotal = new javax.swing.JLabel();
        btnDeleteBook = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtCode = new javax.swing.JTextField();
        frmManu = new javax.swing.JFrame();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblManu = new javax.swing.JTable();
        jButton5 = new javax.swing.JButton();
        frmBook = new javax.swing.JFrame();
        jScrollPane4 = new javax.swing.JScrollPane();
        tblBook = new javax.swing.JTable();
        btnBookAdd = new javax.swing.JButton();
        frmDetail = new javax.swing.JFrame();
        jPanel4 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        txtDetailID = new javax.swing.JTextField();
        txtDetailName = new javax.swing.JTextField();
        txtDetailAddress = new javax.swing.JTextField();
        txtDetailContact = new javax.swing.JTextField();
        txtDetailPhone = new javax.swing.JTextField();
        txtDetailEmail = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        tblBookDetail = new javax.swing.JTable();
        jButton8 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        lblBookNumDetail = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        lbltotalDetail = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        txtDetailCode = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnEdit = new javax.swing.JButton();
        btnApprove = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListOrder = new javax.swing.JTable();
        btnDetail = new javax.swing.JButton();

        fmrEdit.setMinimumSize(new java.awt.Dimension(633, 624));
        fmrEdit.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                fmrEditComponentShown(evt);
            }
        });

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Manufactory"));

        jLabel2.setText("ID");

        jButton2.setText("Select Manufactory");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel3.setText("Name");

        jLabel4.setText("Address");

        jLabel5.setText("Contact");

        jLabel6.setText("Phone");

        jLabel7.setText("Email");

        txtID.setEditable(false);

        txtName.setEditable(false);

        txtAddress.setEditable(false);

        txtContact.setEditable(false);

        txtPhone.setEditable(false);

        txtEmail.setEditable(false);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtID)
                            .addComponent(txtName)
                            .addComponent(txtAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(txtPhone, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtContact, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jButton2)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(jButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(txtAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jButton3.setText("Select Book");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        tblBookEdit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Number", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBookEdit.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblBookEditFocusGained(evt);
            }
        });
        jScrollPane2.setViewportView(tblBookEdit);

        jButton4.setText("Update");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel8.setText("Book Number:");

        lblBookNum.setText("0");

        jLabel10.setText("Price:");

        lbltotal.setText("0");

        btnDeleteBook.setText("Delete Book");
        btnDeleteBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jButton3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnDeleteBook)
                        .addGap(144, 144, 144)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblBookNum)
                        .addGap(49, 49, 49)
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbltotal)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addGap(20, 20, 20))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jLabel8)
                    .addComponent(lblBookNum)
                    .addComponent(jLabel10)
                    .addComponent(lbltotal)
                    .addComponent(btnDeleteBook))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton4)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jLabel9.setText("Order ID:");

        txtCode.setEnabled(false);

        javax.swing.GroupLayout fmrEditLayout = new javax.swing.GroupLayout(fmrEdit.getContentPane());
        fmrEdit.getContentPane().setLayout(fmrEditLayout);
        fmrEditLayout.setHorizontalGroup(
            fmrEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fmrEditLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(fmrEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(fmrEditLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        fmrEditLayout.setVerticalGroup(
            fmrEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(fmrEditLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(fmrEditLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txtCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        frmManu.setMinimumSize(new java.awt.Dimension(488, 327));
        frmManu.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                frmManuComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                frmManuComponentShown(evt);
            }
        });

        tblManu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Address"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblManu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblManuMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblManuMousePressed(evt);
            }
        });
        jScrollPane3.setViewportView(tblManu);

        jButton5.setText("Select");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout frmManuLayout = new javax.swing.GroupLayout(frmManu.getContentPane());
        frmManu.getContentPane().setLayout(frmManuLayout);
        frmManuLayout.setHorizontalGroup(
            frmManuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmManuLayout.createSequentialGroup()
                .addGroup(frmManuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 478, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, frmManuLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton5)))
                .addContainerGap())
        );
        frmManuLayout.setVerticalGroup(
            frmManuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmManuLayout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 9, Short.MAX_VALUE)
                .addComponent(jButton5))
        );

        frmBook.setMinimumSize(new java.awt.Dimension(418, 330));
        frmBook.setPreferredSize(new java.awt.Dimension(418, 335));
        frmBook.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentHidden(java.awt.event.ComponentEvent evt) {
                frmBookComponentHidden(evt);
            }
            public void componentShown(java.awt.event.ComponentEvent evt) {
                frmBookComponentShown(evt);
            }
        });

        tblBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Author", "Category"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane4.setViewportView(tblBook);

        btnBookAdd.setText("Add");
        btnBookAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBookAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout frmBookLayout = new javax.swing.GroupLayout(frmBook.getContentPane());
        frmBook.getContentPane().setLayout(frmBookLayout);
        frmBookLayout.setHorizontalGroup(
            frmBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmBookLayout.createSequentialGroup()
                .addGroup(frmBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBookAdd)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 386, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 32, Short.MAX_VALUE))
        );
        frmBookLayout.setVerticalGroup(
            frmBookLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmBookLayout.createSequentialGroup()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 265, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnBookAdd)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        frmDetail.setMinimumSize(new java.awt.Dimension(633, 624));
        frmDetail.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                frmDetailComponentShown(evt);
            }
        });

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Manufactory"));

        jLabel11.setText("ID");

        jLabel12.setText("Name");

        jLabel13.setText("Address");

        jLabel14.setText("Contact");

        jLabel15.setText("Phone");

        jLabel16.setText("Email");

        txtDetailID.setEditable(false);

        txtDetailName.setEditable(false);

        txtDetailAddress.setEditable(false);

        txtDetailContact.setEditable(false);

        txtDetailPhone.setEditable(false);

        txtDetailEmail.setEditable(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtDetailID)
                    .addComponent(txtDetailName)
                    .addComponent(txtDetailAddress, javax.swing.GroupLayout.DEFAULT_SIZE, 176, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel14))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(txtDetailPhone, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDetailContact, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtDetailEmail, javax.swing.GroupLayout.DEFAULT_SIZE, 217, Short.MAX_VALUE))
                .addContainerGap(115, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(jLabel14)
                    .addComponent(txtDetailID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDetailContact, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel15)
                    .addComponent(txtDetailName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDetailPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jLabel16)
                    .addComponent(txtDetailAddress, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtDetailEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(36, Short.MAX_VALUE))
        );

        tblBookDetail.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Number", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                true, false, true, true
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblBookDetail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                tblBookDetailFocusGained(evt);
            }
        });
        jScrollPane5.setViewportView(tblBookDetail);

        jButton8.setText("OK");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jLabel17.setText("Book Number:");

        lblBookNumDetail.setText("0");

        jLabel18.setText("Price:");

        lbltotalDetail.setText("0");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 603, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(330, 330, 330)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblBookNumDetail)
                        .addGap(49, 49, 49)
                        .addComponent(jLabel18)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lbltotalDetail)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton8)
                .addGap(20, 20, 20))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(lblBookNumDetail)
                    .addComponent(jLabel18)
                    .addComponent(lbltotalDetail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 307, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton8)
                .addContainerGap(15, Short.MAX_VALUE))
        );

        jLabel19.setText("Order ID:");

        txtDetailCode.setEnabled(false);

        javax.swing.GroupLayout frmDetailLayout = new javax.swing.GroupLayout(frmDetail.getContentPane());
        frmDetail.getContentPane().setLayout(frmDetailLayout);
        frmDetailLayout.setHorizontalGroup(
            frmDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmDetailLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(frmDetailLayout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(jLabel19)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtDetailCode, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        frmDetailLayout.setVerticalGroup(
            frmDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(frmDetailLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(frmDetailLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19)
                    .addComponent(txtDetailCode, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btnAdd.setText(" Add New");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnApprove.setText("Approve");
        btnApprove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveActionPerformed(evt);
            }
        });

        tblListOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "OrderID", "Manufactory", "Create By", "Book Number", "Price"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblListOrder);

        btnDetail.setText("Detail");
        btnDetail.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDetailActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(btnAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnEdit)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnApprove)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDetail)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 645, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnEdit)
                    .addComponent(btnApprove)
                    .addComponent(btnDetail))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 371, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(67, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        if(!objOderBook.isVisible())
        objOderBook.setVisible(true);
    }//GEN-LAST:event_btnAddActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        frmManu.setVisible(true);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        int i = 0, col = tblBookEdit.getRowCount();
        listCurrentBook.clear();
        while(i<col)
        {
            listCurrentBook.add(tblBookEdit.getValueAt(i, 0).toString());
            i++;
        }
        i=0;
        while(dtmSelectBook != null && i<dtmSelectBook.getRowCount())
        {
            dtmSelectBook.removeRow(i);
            i++;
        }
        frmBook.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void tblBookEditFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblBookEditFocusGained

    }//GEN-LAST:event_tblBookEditFocusGained

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        boolean flag = true;
        if(dtm.getRowCount() == 0)
        {
            JOptionPane.showMessageDialog(this, "Error: Order is empty");
            flag = false;
        }
        else
        {
            for (int i = 0; i < dtm.getRowCount(); i++) {
                if(dtm.getValueAt(i, 2).equals("0") || dtm.getValueAt(i, 3).equals("0"))
                {
                    JOptionPane.showMessageDialog(this, "Please input number and price");
                    flag = false;
                    break;
                }
            }
        }
        if(flag)
        {
            objQG.setConn(conn);
            //insert book order
            objQG.setTable("BookOrder");
            String columName[] = new String[]{"ManuID"};
            String columnType[] = new String[]{"String"};
            String columnData[] = new String[]{""+txtID.getText()};
            String condName[] = new String[]{"OrderID"};
            String condType[] = new String[]{"String"};
            String condData[] = new String[]{""+OrderEdit};
            objQG.updateQuery(columnType, columName, columnData, condType, condName, condData);

            //insert order detail
            objQG.setTable("BookOrderDetail");
            for (int i = 0; i < dtm.getRowCount(); i++) {
                String columDetailName[] = new String[]{"OrderID","BookID","BookNumber","BookPrice"};
                String columnDetailType[] = new String[]{"String","String","int","int"};
                String[] columnDetailData = new String[]{""+txtCode.getText(),""+dtm.getValueAt(i, 0),""+dtm.getValueAt(i, 2),""+dtm.getValueAt(i, 3)};
                objQG.insertQuery(columDetailName,columnDetailType,columnDetailData);
            }
            JOptionPane.showMessageDialog(this, "Create Order Success \n Wait to Approve!");
        }
    }//GEN-LAST:event_jButton4ActionPerformed

    private void tblManuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblManuMouseClicked
        String ManuID = (String) tblManu.getValueAt(tblManu.getSelectedRow(), 0);
        objQG.setConn(conn);
        objQG.setTable("Manufactory");
        ResultSet rsManu;
        String sql = "SELECT * FROM Manufactory WHERE ManuID like '"+ManuID+"'";
        rsManu = objQG.selectMultiTable(sql);
        ResultSet rsManuTemp;
        rsManuTemp = objQG.selectMultiTable(sql);
        int countTemp = 0;
        try {
            while(rsManuTemp.next())
            {
                countTemp++;
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmOrderBook.class.getName()).log(Level.SEVERE, null, ex);
        }
        String[][] sqlData = new String[countTemp][6];
        String[] listCol = new String[]{"ManuID", "ManuName", "ManuAddress","ManuPhone", "ManuEmail", "ManuContact"};
        String[] listType = new String[]{"String", "String", "String","String","String","String"};
        Display objDisplay = new Display(listCol);
        sqlData = objDisplay.getData(rsManu, listType, countTemp, 6);
        txtID.setText(ManuID);
        txtName.setText(sqlData[0][1]);
        txtAddress.setText(sqlData[0][2]);
        txtPhone.setText(sqlData[0][3]);
        txtEmail.setText(sqlData[0][4]);
        txtContact.setText(sqlData[0][5]);
    }//GEN-LAST:event_tblManuMouseClicked

    private void tblManuMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblManuMousePressed
        //        Point p = evt.getPoint();
        //        int row = tblManu.rowAtPoint(p);
        //        if (evt.getClickCount() == 2) {
            //            txtID.setText(t);
            //        }
    }//GEN-LAST:event_tblManuMousePressed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        frmManu.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void frmManuComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_frmManuComponentHidden
        //        for (int i = 0; i < dtmSelectManu.getRowCount(); i++) {
            //            dtmSelectManu.removeRow(i);
            //        }
    }//GEN-LAST:event_frmManuComponentHidden

    private void btnBookAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBookAddActionPerformed
        if(tblBook.getSelectedRowCount() > 1)
        {
            JOptionPane.showMessageDialog(rootPane, "Select only one book");
        }
        else if(tblBook.getSelectedRowCount() == 0)
        {
            JOptionPane.showMessageDialog(rootPane, "Select one book");
        }
        else if(tblBook.getSelectedRowCount()== 1)
        {
            bookInfo[0] = (String) dtmSelectBook.getValueAt(tblBook.getSelectedRow(), 0);
            bookInfo[1] = (String) dtmSelectBook.getValueAt(tblBook.getSelectedRow(), 1);
            bookInfo[2] = "1";
            bookInfo[3] = "1";
            dtmBookEdit.addRow(bookInfo);
            dtmSelectBook.removeRow(tblBook.getSelectedRow());
        }
    }//GEN-LAST:event_btnBookAddActionPerformed

    private void frmBookComponentHidden(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_frmBookComponentHidden
        //        for (int i = 0; i < dtmSelectBook.getRowCount(); i++) {
            //            dtmSelectBook.removeRow(i);
            //        }
           frmBook.dispose();
    }//GEN-LAST:event_frmBookComponentHidden

    private void frmBookComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_frmBookComponentShown
        
        
        lblBookNum.setText(dtm.getValueAt(tblListOrder.getSelectedRow(),3).toString());
        lblBookNum.setText(dtm.getValueAt(tblListOrder.getSelectedRow(),4).toString());
        
            
            dtmSelectBook.setRowCount(0);
            objQG.setConn(conn);
            objQG.setTable("Book");
            ResultSet rsBook;
            String sql = "Select BookID, BookName, AuthorName, CateName "
            + "From Book, Category "
            + "Where Book.CateID = Category.CateID and "
                    + "BookID not in (";
            int temp = listCurrentBook.size();
            if(!listCurrentBook.isEmpty()){
                for(int i = 0; i<temp; i++)
                {
                    sql+= "'"+listCurrentBook.get(i)+"'";
                    if(i!=(temp-1))
                    {
                        sql+=",";
                    }
                }
            }else sql+="''";
                   sql+= ")";
            listCurrentBook.clear();
            rsBook = objQG.selectMultiTable(sql);
            ResultSet rsBookTemp;
            rsBookTemp = objQG.selectMultiTable(sql);
            int countTemp = 0;
            try {
                while(rsBookTemp.next())
                {
                    countTemp++;
                }
            } catch (SQLException ex) {
                Logger.getLogger(frmOrderBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            String[][] sqlData = new String[countTemp][4];
            String[] listCol = new String[]{"BookID", "BookName", "AuthorName", "CateName"};
            String[] listType = new String[]{"String", "String", "String", "String"};
            Display objDisplay = new Display(listCol);
            sqlData = objDisplay.getData(rsBook, listType, countTemp, 4);
            for(int i = 0; i<countTemp;i++)
            {
                dtmSelectBook.addRow(sqlData[i]);
            }
        
            dtmBookEdit.addTableModelListener(new TableModelListener() {
            @Override
            public void tableChanged(TableModelEvent e) {
              
                    int i = 0;
                    int num = 0;
                    int total = 0;
                    int numtemp = 0;
                    int totaltemp = 0;
                    while(i<tblBookEdit.getRowCount())
                    {
                        numtemp = Integer.parseInt(tblBookEdit.getValueAt(i, 2).toString());
                        totaltemp = Integer.parseInt(tblBookEdit.getValueAt(i, 3).toString());
                        total = total + (numtemp * totaltemp);
                        num = num + numtemp;
                        
                        i++;
                    }
                    lblBookNum.setText(""+num);
                    lbltotal.setText(""+total);
                     
                
            }
        });
            
    }//GEN-LAST:event_frmBookComponentShown

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed
        if(tblListOrder.getSelectedRowCount() == 1)
        {
            OrderEdit = tblListOrder.getValueAt(tblListOrder.getSelectedRow(), 0).toString();
            //kiem tra quyen
            String sqlEmpID = "Select EmpID From BookOrder Where OrderID = '"+OrderEdit+"'";
            ResultSet rsEmpID = objQG.selectMultiTable(sqlEmpID);
            
            try {
                while(rsEmpID.next())
                {
                    empID = rsEmpID.getString("EmpID");
                }
            } catch (SQLException ex) {
                Logger.getLogger(frmListOrder.class.getName()).log(Level.SEVERE, null, ex);
            }
            if(empID == login.loginID)
            {
            //get manufactory
            numtemp = dtm.getValueAt(tblListOrder.getSelectedRow(), 3).toString();
            totaltemp = dtm.getValueAt(tblListOrder.getSelectedRow(), 4).toString();


             String sqlManuInfo = "Select * From Manufactory "
                                 + "Where ManuID like "
                                     + "(Select ManuID From BookOrder "
                                     + "Where OrderID = '"+OrderEdit+"')";
             objQG.setTable("Manufactory");
             objQG.setConn(conn);
             ResultSet rs = objQG.selectMultiTable(sqlManuInfo);
             try {
                 while(rs.next())
                 {
                     manuInfo[0] = rs.getString("ManuID");
                     manuInfo[1] = rs.getString("ManuName");
                     manuInfo[2] = rs.getString("ManuAddress");
                     manuInfo[3] = rs.getString("ManuEmail");
                     manuInfo[4] = rs.getString("ManuPhone");
                     manuInfo[5] = rs.getString("ManuContact");
                 }
             } catch (SQLException ex) {
                 Logger.getLogger(frmListOrder.class.getName()).log(Level.SEVERE, null, ex);
             }

             fmrEdit.setVisible(true);
            }
            else {
                JOptionPane.showMessageDialog(this, "You can not edit this order");
            }
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void frmManuComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_frmManuComponentShown
        if(dtmSelectManu == null)
        {
            dtmSelectManu = (DefaultTableModel) tblManu.getModel();
            objQG.setConn(conn);
            objQG.setTable("Manufactory");
            ResultSet rsManu;
            String sql = "Select ManuID, ManuName, ManuAddress "
                    + "From Manufactory ";

            rsManu = objQG.selectMultiTable(sql);
            ResultSet rsManuTemp;
            rsManuTemp = objQG.selectMultiTable(sql);
            int countTemp = 0;
            try {
                while(rsManuTemp.next())
                {
                    countTemp++;
                }
            } catch (SQLException ex) {
                Logger.getLogger(frmOrderBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            String[][] sqlData = new String[countTemp][4];
            String[] listCol = new String[]{"ManuID", "ManuName", "ManuAddress"};
            String[] listType = new String[]{"String", "String", "String"};
            Display objDisplay = new Display(listCol);
            sqlData = objDisplay.getData(rsManu, listType, countTemp, 4);
            for(int i = 0; i<countTemp;i++)
            {
                dtmSelectManu.addRow(sqlData[i]);
            }
        }
    }//GEN-LAST:event_frmManuComponentShown

    private void fmrEditComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_fmrEditComponentShown
            
        lblBookNum.setText(numtemp);
        lbltotal.setText(totaltemp);
        
        dtmBookEdit = (DefaultTableModel) tblBookEdit.getModel();
            objQG.setConn(conn);
            objQG.setTable("BookOrderDetail");
            ResultSet rsManu;
            String sql = "Select Book.BookID, BookName, BookNumber, BookPrice "
                    + "From BookOrderDetail, Book "
                    + "Where BookOrderDetail.BookID = Book.BookID and OrderID = '"+OrderEdit+"'";

            rsManu = objQG.selectMultiTable(sql);
            ResultSet rsManuTemp;
            rsManuTemp = objQG.selectMultiTable(sql);
            int countTemp = 0;
            try {
                while(rsManuTemp.next())
                {
                    countTemp++;
                }
            } catch (SQLException ex) {
                Logger.getLogger(frmOrderBook.class.getName()).log(Level.SEVERE, null, ex);
            }
            String[][] sqlData = new String[countTemp][4];
            String[] listCol = new String[]{"BookID", "BookName", "BookNumber","BookPrice"};
            String[] listType = new String[]{"String", "String", "int", "int"};
            Display objDisplay = new Display(listCol);
            sqlData = objDisplay.getData(rsManu, listType, countTemp, 4);
            for(int i = 0; i<countTemp;i++)
            {
                dtmBookEdit.addRow(sqlData[i]);
            }
            //manufactory
            txtID.setText(manuInfo[0]);
            txtName.setText(manuInfo[1]);
            txtAddress.setText(manuInfo[2]);
            txtEmail.setText(manuInfo[3]);
            txtPhone.setText(manuInfo[4]);
            txtContact.setText(manuInfo[5]);
    }//GEN-LAST:event_fmrEditComponentShown

    private void btnDeleteBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteBookActionPerformed
        if(tblBookEdit.getSelectedRowCount()== 1)
        {
            dtmBookEdit.removeRow(tblBookEdit.getSelectedRow());
        }
    }//GEN-LAST:event_btnDeleteBookActionPerformed

    private void btnApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveActionPerformed
        String sqlPermission = "Select Approve From Department, Employee Where Employee.DepID = Department.DepID and EmpID = '"+login.loginID+"'";
        objQG.setConn(conn);
        ResultSet rsPermission = objQG.selectMultiTable(sqlPermission);
        try {
            while(rsPermission.next())
            { 
                bPermission = rsPermission.getBoolean("Approve");
                        }
        } catch (SQLException ex) {
            Logger.getLogger(frmListOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
        if(bPermission)
        {
            new frmApprove().setVisible(true);
        }
        else JOptionPane.showMessageDialog(this, "You haven't permission to approve order");
    }//GEN-LAST:event_btnApproveActionPerformed

    private void tblBookDetailFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tblBookDetailFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_tblBookDetailFocusGained

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton8ActionPerformed

    private void frmDetailComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_frmDetailComponentShown
        int count = 0;
        ResultSet rsDetailOrder;
        ResultSet rsDetailInfo = null;
        dtmOrderDetail = (DefaultTableModel) tblBookDetail.getModel();
        try {                                         
            txtDetailCode.setText(""+sOrderDetail);
            String sqlDetailOrder = "Select Manufactory.ManuID, ManuName, ManuAddress, ManuEmail, ManuPhone, ManuContact "
                    + "From BookOrder, Manufactory "
                    + "Where BookOrder.ManuID = Manufactory.ManuID and OrderID = '"+sOrderDetail+"'";
            String sqlDetailInfo = "Select Book.BookID, BookName, BookNumber, BookPrice "
                    + "From Book, BookOrderDetail "
                    + "Where Book.BookID = BookOrderDetail.BookID and OrderID = '"+sOrderDetail+"'";
            rsDetailOrder = objQG.selectMultiTable(sqlDetailOrder);
            rsDetailInfo = objQG.selectMultiTable(sqlDetailInfo);
            
            try {
                //info
                while(rsDetailOrder.next())
                {
                    txtDetailID.setText(rsDetailOrder.getString("ManuID"));
                    txtDetailName.setText(rsDetailOrder.getString("ManuName"));
                    txtDetailAddress.setText(rsDetailOrder.getString("ManuAddress"));
                    txtDetailEmail.setText(rsDetailOrder.getString("ManuEmail"));
                    txtDetailPhone.setText(rsDetailOrder.getString("ManuPhone"));
                    txtDetailContact.setText(rsDetailOrder.getString("ManuContact"));
                }
            } catch (SQLException ex) {
                Logger.getLogger(frmListOrder.class.getName()).log(Level.SEVERE, null, ex);
            }
            ResultSet rsDetailtemp = objQG.selectMultiTable(sqlDetailInfo);
            
            while(rsDetailtemp.next())
            {
                count++;
            }
            
        } catch (SQLException ex) {
            Logger.getLogger(frmListOrder.class.getName()).log(Level.SEVERE, null, ex);
        }
        String[][] sqlData = new String[count][4];
            String[] listCol = new String[]{"BookID", "BookName", "BookNumber", "BookPrice"};
            String[] listType = new String[]{"String", "String", "int","int"};
            Display objDisplay = new Display(listCol);
            sqlData = objDisplay.getData(rsDetailInfo, listType, count, 4);
            for(int i = 0; i<count;i++)
            {
                dtmOrderDetail.addRow(sqlData[i]);
            }
        lblBookNumDetail.setText(numtemp);
        lbltotalDetail.setText(totaltemp);
    }//GEN-LAST:event_frmDetailComponentShown

    private void btnDetailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDetailActionPerformed
        if(tblListOrder.getSelectedRowCount() == 1)
        {
            sOrderDetail = dtm.getValueAt(tblListOrder.getSelectedRow(), 0).toString();
            numtemp = dtm.getValueAt(tblListOrder.getSelectedRow(), 3).toString();
            totaltemp = dtm.getValueAt(tblListOrder.getSelectedRow(), 4).toString();
            
            frmDetail.setVisible(true);
        }
    }//GEN-LAST:event_btnDetailActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmListOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmListOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmListOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmListOrder.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmListOrder().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnApprove;
    private javax.swing.JButton btnBookAdd;
    private javax.swing.JButton btnDeleteBook;
    private javax.swing.JButton btnDetail;
    private javax.swing.JButton btnEdit;
    private javax.swing.JFrame fmrEdit;
    private javax.swing.JFrame frmBook;
    private javax.swing.JFrame frmDetail;
    private javax.swing.JFrame frmManu;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JLabel lblBookNum;
    private javax.swing.JLabel lblBookNumDetail;
    private javax.swing.JLabel lbltotal;
    private javax.swing.JLabel lbltotalDetail;
    private javax.swing.JTable tblBook;
    private javax.swing.JTable tblBookDetail;
    private javax.swing.JTable tblBookEdit;
    private javax.swing.JTable tblListOrder;
    private javax.swing.JTable tblManu;
    private javax.swing.JTextField txtAddress;
    private javax.swing.JTextField txtCode;
    private javax.swing.JTextField txtContact;
    private javax.swing.JTextField txtDetailAddress;
    private javax.swing.JTextField txtDetailCode;
    private javax.swing.JTextField txtDetailContact;
    private javax.swing.JTextField txtDetailEmail;
    private javax.swing.JTextField txtDetailID;
    private javax.swing.JTextField txtDetailName;
    private javax.swing.JTextField txtDetailPhone;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPhone;
    // End of variables declaration//GEN-END:variables
}
